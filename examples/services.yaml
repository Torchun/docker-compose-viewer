version: "3.7"

services:
  nginx:
    image: nginx:1.23.3
    # restart: always
    restart: unless-stopped
    container_name: "nginx"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d # no need to modify permissions
    ports:
      - 80:80
      - 443:443

  gitlab:
    image: gitlab/gitlab-ce:15.8.1-ce.0
    restart: unless-stopped
    container_name: "gitlab"
    hostname: "gitlab.dea"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url "http://192.168.1.45"
    ports:
      - 42001:80
    volumes:
      - ./gitlab/config:/etc/gitlab
      - ./gitlab/logs:/var/log/gitlab
      - ./gitlab/data:/var/opt/gitlab
    shm_size: "256m"

  nexus:
    image: sonatype/nexus3:3.46.0
    restart: unless-stopped
    container_name: "nexus3"
    volumes:
      - ./nexus/data:/nexus-data # ensure "chown -R 200:200 ./nexus/data"
    ports:
      - 42002:8081

  prometheus:
    image: prom/prometheus:v2.42.0
    restart: unless-stopped
    container_name: "prometheus"
    ports:
      - 42003:9090
    volumes:
      - ./prometheus/data:/prometheus # ensure "chown -R 65534:65534 ./prometheus"
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # ensure "chown -R 65534:65534 ./prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention=1d" 

  node-exporter:
    image: prom/node-exporter:v1.5.0
    restart: unless-stopped
    user: root
    container_name: "node-exporter"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 42004:9100
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    restart: unless-stopped
    container_name: "cadvisor"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 42005:8080

  grafana:
    image: grafana/grafana:9.3.6
    restart: unless-stopped
    container_name: "grafana"
    volumes:
      - ./grafana/data:/var/lib/grafana # ensure "chown -R 472:0 ./grafana/data"
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources # ensure "chown -R 472:0 ./grafana/provisioning"
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml # ensure "chown -R 472:0 ./grafana/dashboard.yaml"
      - ./grafana/dashboards:/var/lib/grafana/dashboards # ensure "chown -R 472:0 ./grafana/dashboards"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - DS_PROMETHEUS=Prometheus # this is Datasource name. See grafana/provisioning/datasources/prometheus.dea.yml
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/OS_Monitoring.json
    depends_on:
      - prometheus
    ports:
      - 42006:3000


  postgres-exporter:
    image: bitnami/postgres-exporter:0.11.1
    restart: unless-stopped
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_URI: "192.168.1.45:42007/crawlerdb?sslmode=disable"
      DATA_SOURCE_USER: "crawler"
      DATA_SOURCE_PASS: "password"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
    volumes:
      - ./postgres/exporter/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - 42008:9187
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M

  pgadmin:
    image: dpage/pgadmin4:6.20
    restart: unless-stopped
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin@mail.local"
      PGADMIN_DEFAULT_PASSWORD: "password"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin # ensure "chown -R 5050:0 ./pgadmin/"
    ports:
      - 42009:80
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  minio:
    image: minio/minio:RELEASE.2023-02-27T18-10-45Z
    restart: unless-stopped
    container_name: minio
    ports:
      - 42010:9000
      - 42011:9001
    volumes:
      - ./minio:/data
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "password"
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
      MINIO_PROMETHEUS_JOB_ID: "minio" # same as in ./prometheus/prometheus.yml
      MINIO_PROMETHEUS_URL: "http://192.168.1.45:42003" # same as in ./prometheus/prometheus.yml
    command: server --console-address ":9001" /data

  jupyter:
    image: jupyter/datascience-notebook:notebook-6.5.2
    restart: unless-stopped
    container_name: jupyter
    ports:
      - 42012:8888
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN: "password"
    volumes:
      - ./jupyter/notebooks:/home/jovyan/notebooks # ensure "chown -R 1000:100 ./jupyter"

